from reportlab.lib.pagesizes import letter, A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle, Image
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.lib import colors
from io import BytesIO
from datetime import datetime
import os

def generate_detection_pdf(detection_data):
    """Generate PDF report for disease detection"""
    buffer = BytesIO()
    
    # Create the PDF document
    doc = SimpleDocTemplate(buffer, pagesize=A4)
    story = []
    
    # Get styles
    styles = getSampleStyleSheet()
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=18,
        spaceAfter=15,
        alignment=1,  # Center alignment
        textColor=colors.darkgreen
    )
    
    # Title
    title = Paragraph("CornCare Disease Detection Report", title_style)
    story.append(title)
    story.append(Spacer(1, 12))
    
    # Report details table
    report_data = [
        ["Report Generated:", datetime.now().strftime("%Y-%m-%d %H:%M:%S")],
        ["Detection Date:", detection_data.get('detected_at', 'N/A')],
        ["Disease Detected:", detection_data.get('disease_name', 'N/A')],
        ["Confidence Level:", f"{detection_data.get('confidence', 0) * 100:.1f}%"],
    ]
    
    report_table = Table(report_data, colWidths=[2*inch, 3*inch])
    report_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (0, -1), colors.lightgrey),
        ('TEXTCOLOR', (0, 0), (-1, -1), colors.black),
        ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
        ('FONTNAME', (0, 0), (-1, -1), 'Helvetica'),
        ('FONTSIZE', (0, 0), (-1, -1), 12),
        ('BOTTOMPADDING', (0, 0), (-1, -1), 12),
        ('GRID', (0, 0), (-1, -1), 1, colors.black)
    ]))
    
    story.append(report_table)
    story.append(Spacer(1, 12))
    
    # Add uploaded image if available
    image_path = detection_data.get('image_path')
    if image_path and os.path.exists(image_path):
        try:
            # Image section title
            image_title = Paragraph("Uploaded Image", styles['Heading2'])
            story.append(image_title)
            story.append(Spacer(1, 6))
            
            # Add the image with smaller size for single page layout
            img = Image(image_path, width=2.5*inch, height=2*inch)
            story.append(img)
            story.append(Spacer(1, 12))
        except Exception as e:
            # If image loading fails, add a note
            error_text = Paragraph(f"Image could not be loaded: {str(e)}", styles['Normal'])
            story.append(error_text)
            story.append(Spacer(1, 20))
    
    # Treatment section
    treatment_title = Paragraph("Recommended Treatment", styles['Heading2'])
    story.append(treatment_title)
    story.append(Spacer(1, 6))
    
    cure_text = Paragraph(detection_data.get('cure', 'No treatment information available.'), styles['Normal'])
    story.append(cure_text)
    story.append(Spacer(1, 10))
    
    # Tips section
    tips_title = Paragraph("Prevention Tips", styles['Heading2'])
    story.append(tips_title)
    story.append(Spacer(1, 6))
    
    tips_text = Paragraph(detection_data.get('tips', 'No prevention tips available.'), styles['Normal'])
    story.append(tips_text)
    story.append(Spacer(1, 50))
    
    # Footer
    footer_text = Paragraph(
        "This report is generated by CornCare AI system. Please consult with agricultural experts for detailed treatment plans.",
        ParagraphStyle(
            'Footer',
            parent=styles['Normal'],
            fontSize=10,
            textColor=colors.grey,
            alignment=1
        )
    )
    story.append(footer_text)
    
    # Build PDF
    doc.build(story)
    buffer.seek(0)
    
    return buffer